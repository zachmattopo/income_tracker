name: income_tracker
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.7.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter

  # Generate code for building apps with Flutter based on your designs in Adobe XD with the "XD to Flutter" plugin.
  # This package contains helper widgets used by the plugin.
  # https://pub.dev/packages/adobe_xd
  adobe_xd: ^0.1.4

  # A Flutter package that helps implement the BLoC pattern.
  # https://pub.dev/packages/flutter_bloc
  flutter_bloc: ^5.0.1

  # A composable, Future-based library for making HTTP requests.
  # https://pub.dev/packages/http
  http: ^0.12.1

  # Simplify equality comparisons
  # https://pub.dev/packages/equatable
  equatable: ^1.2.0

  # Hand-picked, open-source, community-driven collection of lint rules for Dart and Flutter projects.
  # The set of rules follows the Effective Dart: Style Guide.
  # https://pub.dev/packages/lint
  lint: ^1.2.0

  # A library to draw fantastic charts in Flutter
  # https://pub.dev/packages/fl_chart
  fl_chart: ^0.10.1

  # Hive is a lightweight and blazing fast key-value database written in pure Dart.
  # https://pub.dev/packages/hive
  hive: ^1.4.1+1
  hive_flutter: ^0.3.0+2

  # Date/number formatting and parsing.
  # https://pub.dev/packages/intl
  intl: ^0.16.1

  # Adds additional capabilities to Dart Streams and StreamControllers.
  # https://pub.dev/packages/rxdart
  rxdart: ^0.24.1

  # Flutter widget that automatically resizes text to fit perfectly within its bounds.
  # https://pub.dev/packages/auto_size_text
  auto_size_text: ^2.1.0

  # Simple, fast generation of RFC4122 UUIDs.
  # https://pub.dev/packages/uuid
  uuid: ^2.2.0


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^0.1.3

dev_dependencies:
  flutter_test:
    sdk: flutter

  # Generate TypeAdapters for Hive db to store custom objects.
  # TypeAdapters convert objects to and fro binary form.
  # https://pub.dev/packages/hive
  # https://github.com/hivedb/hive/issues/337#issuecomment-640215930
  hive_generator:
    git:
      url: git://github.com/hivedb/hive.git
      path: hive_generator
  build_runner: ^1.10.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/logo_get.png

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
